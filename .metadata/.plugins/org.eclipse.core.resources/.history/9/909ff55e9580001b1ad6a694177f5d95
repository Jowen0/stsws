package org.zerock.board.controller;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.header;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.zerock.board.dto.BoardDTO;
import org.zerock.board.service.BoardService;
import org.zerock.common.dto.PageDTO;
import org.zerock.common.dto.PageMaker;

import lombok.RequiredArgsConstructor;
import lombok.extern.log4j.Log4j;
import sun.jvm.hotspot.memory.HeapBlock.Header;

@Controller
@RequestMapping("/board")
@Log4j
@RequiredArgsConstructor
public class BoardController {
	
	private final BoardService service;
	
	@GetMapping({"/","/list"}) //return을 void로 쓰지 않은 이유
	public String list(PageDTO pageDTO, Model model) {
		
		log.info("list......................");
		
		model.addAttribute("list", service.getPageList(pageDTO));
		model.addAttribute("pageMaker", new PageMaker(pageDTO, service.getTotalCount()));
		
		return "/board/list";
	}
	
	@GetMapping("/register")
	public void register() {
		
		
		
	}
	
	@PostMapping(value = "/register", produces = {"text/plain"})
	@ResponseBody //response에 담아서 보낸다.
	public ResponseEntity<String> registerPost(@RequestBody @Valid BoardDTO dto,
											BindingResult result) {
							  //RequestBody: Json Data를 Java의 객체로 바꿔준다.
								//JackSon dataBind 라이브러리 추가해서 가능하다.
		log.info(dto);
		
		if(result.hasErrors() ) {
			
			log.info(result.getAllErrors());
			
			 
			
			return "fail";
			//+http 상태코드 200을 400에러 든 바꾼다음 화면에 띄워야한다.
		}
		
		return "success";
	}
}
